from datetime import datetime

produtos = {}
sessoes = {}
tp_sessao = {"1":"A칂OUGUE", "2":"FRIOS E LATIC칈NIOS", "3":"PADARIA", "4":"BEBIDAS", "5":"HIGIENE PESSOAL", "6":"LIMPEZA", "7":"HORTIFRUTI", "8":"MERCEARIA"}

class produto: # fun칞칚o para armazenar dados do produto
    def __init__(self, codigo, nome, sessao, quantidade, preco, validade):
        self.codigo = codigo
        self.nome = nome
        self.sessao = sessao
        self.quantidade = quantidade
        self.preco = preco
        self.validade = datetime.strptime(validade, "%d/%m/%Y")

    def exibir_info(self):
        return f"C칩digo: {self.codigo}\nProduto: {self.nome}\nSess칚o: {self.sessao}\nQuantidade: {self.quantidade}\nPre칞o: {self.preco}\nValidade: {self.validade.strftime('%d/%m/%Y')}"

def cadastro_produto():
    print("SISTEMA DE CADASTRO DE PRODUTOS.")
    while True:
        codigo = input("Digite o c칩digo para Cadastro do Produto: ").strip()
        if not codigo:
            print("Dados Inv치lidos. 游뚿游뚿")
        elif not codigo.isdigit():
            print("Por Favor, s칩 pode conter n칰meros no C칩digo. 游뚿游뚿")
        elif codigo in produtos:
            print("C칩digo j치 usado, por favor, digite um C칩digo novo..游뚿游뚿")
        else:
            break

    nome = input("Digite o nome do Produto: ").upper()
    print("Informe a Sess칚o de Cadastro:")

    for chave, valor in tp_sessao.items():
        print(f"{chave} - {valor}")
    while True:
        selec_sessao = input("Digite a Sess칚o do produto: ").strip()
        if selec_sessao in tp_sessao:
            sessao = tp_sessao[selec_sessao]
            break
        else:
            print("Op칞칚o Escolhida Inv치lida - Repita o processo novamente.")
    while True:
        try:
            quantidade = float(input("Digite a quantidade do Produto: "))
            if quantidade >= 0:
                break
            else:
                print("Quantidade definida inferior ao permitido. 游뚿游뚿")   
        except ValueError:
            print("Dados Inv치lidos.游뚿游뚿")
    while True:                        
        try:
            preco = float(input("Digite o valor de venda da Unidade: "))
            if preco > 0:
                break
            else:
                print("A precifica칞칚o est치 incorreta. 游뚿游뚿")
        except ValueError:
            print("Dados Inv치lidos.游뚿游뚿")
    while True:
        validade = input("Digite a validade do Produto (DD/MM/AAAA): ")
        try:
            data_valida = datetime.strptime(validade, "%d/%m/%Y")  # Tenta converter para um formato correto
            return data_valida.strftime("%d/%m/%Y")  # Retorna a data formatada corretamente.
        except ValueError:
            print("Data inv치lida! Insira no formato correto (DD/MM/AAAA).")

        item = produto(codigo, nome, sessao, quantidade, preco, validade)
        print("\nProduto Cadastrado com Sucesso!")
        print(item.exibir_info())

        produtos[codigo] = {"nome": nome, "sessao": sessao, "quantidade": quantidade, "preco": preco, "validade": item.validade.strftime('%d/%m/%Y')} # "item.validade" - Armazena como datetime, n칚o como string
        
        if sessao not in sessoes:
            sessoes[sessao] = [] # Inicializa a sess칚o como uma lista vazia
        sessoes[sessao].append({"codigo": codigo, "nome": nome, "quantidade": quantidade, "preco": preco, "validade": item.validade.strftime('%d/%m/%Y')}) # "item.validade" - Armazena como datetime, n칚o como string
        
        for codigo, dados in produtos.items():
            print(f"\nC칩digo: {codigo} \nItem: {dados['nome']} \nSess칚o: {dados['sessao']} \nQuantidade: {dados['quantidade']}\nUnid. Pre칞o: R${dados['preco']}\nValidade: {dados['validade']}")
        
# cadastro_produto()


def listarProduto():
    print("SISTEMA DE LISTAGEM DO ESTOQUE.")
    if not produtos:
        print ("N칚o h치 produto cadastrado.")
        return
    for codigo, dados in produtos.items():
        print(f"| C칩digo: {codigo:<5} | Item: {dados['nome']:<20} | Sess칚o: {dados['sessao']:<18} | Quantidade: {dados['quantidade']:<5} | Pre칞o Unid.: {dados['preco']} | Validade do Produto: {dados['validade']} |")
        if isinstance(dados['validade'], str):
            validade = datetime.strptime(dados['validade'], "%d/%m/%Y")
        else:
            validade = dados['validade']
        if validade < datetime.now():
            print ("| Produto Vencido")

#listarProduto()


def pesquisaritem():
    print("SISTEMA DE PESQUISA DE ITEM NO ESTOQUE.")
    codigo = input("Digite C칩digo para Pesquisa: ")
    if codigo in produtos:
        dados = produtos[codigo]
        print(f"| Item: {dados['nome']:<20} | Sess칚o: {dados['sessao']:<18} | Quantidade: {dados['quantidade']:<5} | Pre칞o Unid.: {dados['preco']} | Validade do Produto: {dados['validade']} |")
    else:
        print("Produto n칚o encontrado.")
    if isinstance(dados['validade'], str):
        validade = datetime.strptime(dados['validade'], "%d/%m/%Y")
    else:
        validade = dados['validade']
    if validade < datetime.now():
            print ("| Produto Vencido游뚿游뚿游뚿")
#pesquisaritem()

def pesquisarsessao():
    print("SISTEMA DE PESQUISA POR SESS츾O.")
    print("informe a Sess칚o que deseja filtrar:")

    for chave, valor in tp_sessao.items():
        print(f"{chave} - {valor}")

    sessao_pesq = input("Digite o c칩digo correspondente. ")

    if sessao_pesq in tp_sessao:
        sessao_filtrada = tp_sessao[sessao_pesq]
        
        if sessao_filtrada in sessoes:
            print(f"\nProdutos encontrados na Sess칚o {sessao_filtrada}: ")

            for dados in sessoes[sessao_filtrada]:
                print(f"Sess칚o: {sessao_filtrada:<18} | C칩digo: {dados['codigo']:<5} | Item: {dados['nome']:<20} | Quantidade: {dados['quantidade']:<5} | Pre칞o Unid.: {dados['preco']:<6} | Validade: {dados['validade']} |")
                    
                if isinstance(dados['validade'], str):
                    validade = datetime.strptime(dados['validade'], "%d/%m/%Y")
                else:
                    validade = dados['validade']
                
                if validade < datetime.now():
                    print("Produto Vencido 游뚿")
        else:
            print("Sess칚o n칚o encontrada.")
    else:
        print("C칩digo de sess칚o inv치lido.")